<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxUserImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>